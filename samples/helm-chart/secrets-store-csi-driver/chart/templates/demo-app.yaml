apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  labels:
    app: {{ .Values.appName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        azure.workload.identity/use: "true"
        app: {{ .Values.appName }}
        date: "{{ now | unixEpoch }}"
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }} 
      containers:
        - image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
          imagePullPolicy: Always
          name: {{ .Values.appName }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: demo-app-configmap
          volumeMounts:
            - name: demo-app-secrets-store
              mountPath: "/mnt/secrets-store"
              readOnly: true
          volumeMounts:
            - name: persistent-storage
              mountPath: "/mnt/azurefile"
          ports:
            - containerPort: {{ .Values.service.port }}
      volumes:
      - name: demo-app-secrets-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ .Values.CSI.name }}
      - name: persistent-storage
        persistentVolumeClaim:
          claimName: {{ .Values.storage.pvcName }}
      restartPolicy: Always
      nodeSelector:
        agentpool: {{ .Values.nodePool }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.appName }}
spec:
  type: {{ .Values.service.type }}
  ports:
  - port: {{ .Values.service.port }}
  selector:
    app: {{ .Values.appName }}


